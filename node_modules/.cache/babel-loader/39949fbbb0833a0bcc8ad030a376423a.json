{"ast":null,"code":"import _regeneratorRuntime from \"/Users/omrigotlieb/Desktop/projects/CA/CodeAcademy/jamming/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/omrigotlieb/Desktop/projects/CA/CodeAcademy/jamming/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/omrigotlieb/Desktop/projects/CA/CodeAcademy/jamming/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omrigotlieb/Desktop/projects/CA/CodeAcademy/jamming/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/omrigotlieb/Desktop/projects/CA/CodeAcademy/jamming/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omrigotlieb/Desktop/projects/CA/CodeAcademy/jamming/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/omrigotlieb/Desktop/projects/CA/CodeAcademy/jamming/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/omrigotlieb/Desktop/projects/CA/CodeAcademy/jamming/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/omrigotlieb/Desktop/projects/CA/CodeAcademy/jamming/src/Components/App/App.js\";\nimport React, { Component } from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      playlistName: 'New playlist',\n      playlistTracks: [{\n        album: \"L'amour En France\",\n        artist: 'Alain Chamfort',\n        id: '5aFLrbiRTEaZuueEHNnhIZ',\n        name: 'Madona',\n        uri: 'spotify:track:5aFLrbiRTEaZuueEHNnhIZ'\n      }],\n      searchResults: [{\n        album: 'Recovery',\n        artist: 'Eminem',\n        id: '15JINEqzVMv3SvJTAXAKED',\n        name: 'Love The Way You Lie',\n        uri: 'spotify:track:15JINEqzVMv3SvJTAXAKED'\n      }, {\n        album: 'Curtain Call',\n        artist: 'Eminem',\n        id: '1dWimOlV5KUHDerWZVDv5l',\n        name: 'My Name Is',\n        uri: 'spotify:track:1dWimOlV5KUHDerWZVDv5l'\n      }]\n    };\n    _this.addTrack = _this.addTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeTrack = _this.removeTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePlaylistName = _this.updatePlaylistName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.savePlaylist = _this.savePlaylist.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"addTrack\",\n    value: function addTrack(track) {\n      var trackArray = this.state.playlistTracks.filter(function (current) {\n        return current.id === track.id;\n      });\n\n      if (!trackArray.length) {\n        var playlistTracks = this.state.playlistTracks;\n        playlistTracks.push(track);\n        this.setState({\n          playlistTracks: playlistTracks\n        });\n      }\n    }\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track) {\n      var trackArray = this.state.playlistTracks.filter(function (current) {\n        return current.id === track.id;\n      });\n\n      if (trackArray.length) {\n        var playlistTracks = this.state.playlistTracks;\n        delete playlistTracks[this.state.playlistTracks.indexOf(track)];\n        this.setState({\n          playlistTracks: playlistTracks\n        });\n      }\n    }\n  }, {\n    key: \"updatePlaylistName\",\n    value: function updatePlaylistName(playlistName) {\n      this.setState({\n        playlistName: playlistName\n      });\n    }\n  }, {\n    key: \"savePlaylist\",\n    value: function () {\n      var _savePlaylist = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var trackURIs;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                trackURIs = this.state.playlistTracks.map(function (track) {\n                  return track.uri;\n                }).flat();\n                _context.next = 3;\n                return Spotify.savePlaylist(this.state.playlistName, trackURIs);\n\n              case 3:\n                // TODO add then?\n                this.updatePlaylistName('New Playlist');\n                this.setState({\n                  playlistTracks: []\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function savePlaylist() {\n        return _savePlaylist.apply(this, arguments);\n      }\n\n      return savePlaylist;\n    }()\n  }, {\n    key: \"search\",\n    value: function () {\n      var _search = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(term) {\n        var searchResults;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Spotify.search(term);\n\n              case 2:\n                searchResults = _context2.sent;\n                this.setState({\n                  searchResults: searchResults\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function search(_x) {\n        return _search.apply(this, arguments);\n      }\n\n      return search;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Ja\", React.createElement(\"span\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        onSearch: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(SearchResults, {\n        onAdd: this.addTrack,\n        searchResults: this.state.searchResults,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        onSave: this.savePlaylist,\n        onNameChange: this.updatePlaylistName,\n        onRemove: this.removeTrack,\n        playlistTracks: this.state.playlistTracks,\n        playlistName: this.state.playlistName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/omrigotlieb/Desktop/projects/CA/CodeAcademy/jamming/src/Components/App/App.js"],"names":["React","Component","SearchBar","SearchResults","Playlist","Spotify","App","props","state","playlistName","playlistTracks","album","artist","id","name","uri","searchResults","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","trackArray","filter","current","length","push","setState","indexOf","trackURIs","map","flat","term"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playlistName: 'New playlist',\n      playlistTracks: [{\n        album: \"L'amour En France\",\n        artist: 'Alain Chamfort',\n        id: '5aFLrbiRTEaZuueEHNnhIZ',\n        name: 'Madona',\n        uri: 'spotify:track:5aFLrbiRTEaZuueEHNnhIZ',\n      }],\n      searchResults: [\n        {\n          album: 'Recovery',\n          artist: 'Eminem',\n          id: '15JINEqzVMv3SvJTAXAKED',\n          name: 'Love The Way You Lie',\n          uri: 'spotify:track:15JINEqzVMv3SvJTAXAKED',\n        },\n        {\n          album: 'Curtain Call',\n          artist: 'Eminem',\n          id: '1dWimOlV5KUHDerWZVDv5l',\n          name: 'My Name Is',\n          uri: 'spotify:track:1dWimOlV5KUHDerWZVDv5l',\n        }],\n    };\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    const trackArray = this.state.playlistTracks.filter(current => current.id === track.id);\n    if (!trackArray.length) {\n      const { playlistTracks } = this.state;\n      playlistTracks.push(track);\n      this.setState({ playlistTracks });\n    }\n  }\n\n  removeTrack(track) {\n    const trackArray = this.state.playlistTracks.filter(current => current.id === track.id);\n    if (trackArray.length) {\n      const { playlistTracks } = this.state;\n      delete playlistTracks[this.state.playlistTracks.indexOf(track)];\n      this.setState({ playlistTracks });\n    }\n  }\n\n  updatePlaylistName(playlistName) {\n    this.setState({ playlistName });\n  }\n\n  async savePlaylist() {\n    const trackURIs = this.state.playlistTracks.map(track => track.uri).flat();\n    await Spotify.savePlaylist(this.state.playlistName, trackURIs);\n    // TODO add then?\n    this.updatePlaylistName('New Playlist');\n    this.setState({ playlistTracks: [] });\n  }\n\n  async search(term) {\n    const searchResults = await Spotify.search(term);\n    this.setState({ searchResults });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n          <SearchResults onAdd={this.addTrack} searchResults={this.state.searchResults} />\n          <Playlist\n              onSave={this.savePlaylist}\n              onNameChange={this.updatePlaylistName}\n              onRemove={this.removeTrack}\n              playlistTracks={this.state.playlistTracks}\n              playlistName={this.state.playlistName} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}